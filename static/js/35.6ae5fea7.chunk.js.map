{"version":3,"file":"static/js/35.6ae5fea7.chunk.js","mappings":"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","sources":["components/common/DropDown.tsx","types.ts","components/common/Input.tsx","components/filters/Filters.tsx","components/table/Table.tsx","api/config.ts","api/country.ts","pages/Main/useMain.ts","utils.ts","pages/Main/Main.tsx"],"sourcesContent":["import { useState, FC } from \"react\";\r\nimport { TextField, Autocomplete, Typography } from \"@mui/material\";\r\nimport { EDropType } from \"../../types\";\r\n\r\ninterface Props {\r\n  label: EDropType;\r\n  options: string[];\r\n  size: \"small\" | \"medium\";\r\n  handleDropDowns: (value: string | null, type: EDropType) => void;\r\n}\r\n\r\nconst DropDown: FC<Props> = ({ size, options, label, handleDropDowns }) => {\r\n  const [value, setValue] = useState<string | null>(null);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleValueChange = (e: any, newValue: string | null) => {\r\n    setValue(newValue);\r\n    handleDropDowns(newValue, label);\r\n  };\r\n\r\n  return (\r\n    <Typography component=\"div\">\r\n      <Autocomplete\r\n        size={size}\r\n        value={value}\r\n        onChange={handleValueChange}\r\n        inputValue={inputValue}\r\n        onInputChange={(_, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        options={options}\r\n        sx={{ width: 300 }}\r\n        renderInput={(params) => <TextField {...params} label={label} />}\r\n      />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","export interface IData {\r\n  country: string;\r\n  region: string;\r\n  population: number;\r\n  area: number;\r\n  flag: {\r\n    png: string;\r\n    svg: string;\r\n    alt: string;\r\n  };\r\n}\r\n\r\nexport enum EDropType {\r\n  sortBy = \"Sort by\",\r\n  regions = \"Regions\",\r\n}\r\n","import { useState, FC, ChangeEvent } from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  handleInput: (name: string) => void;\r\n}\r\n\r\nconst Input: FC<Props> = ({ handleInput }) => {\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const value = e?.target?.value;\r\n    setSearch(value);\r\n    handleInput(value);\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      size=\"medium\"\r\n      label=\"Search\"\r\n      placeholder=\"Search\"\r\n      value={search}\r\n      onChange={handleSearch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { FC } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport DropDown from \"../common/DropDown\";\r\nimport { EDropType } from \"../../types\";\r\nimport Input from \"../common/Input\";\r\n\r\ninterface Props {\r\n  handleInput: (name: string) => void;\r\n  handleDropDowns: (value: string | null, type: EDropType) => void;\r\n}\r\n\r\nconst Filters: FC<Props> = ({ handleDropDowns, handleInput }) => {\r\n  const regionOptions = [\r\n    \"Africa\",\r\n    \"Europe\",\r\n    \"Asia\",\r\n    \"Oceania\",\r\n    \"Australia\",\r\n    \"North America\",\r\n    \"South America\",\r\n  ];\r\n  const sortOptions = [\"Population\", \"Area\"];\r\n\r\n  return (\r\n    <Typography component=\"div\">\r\n      <Typography component=\"div\" variant=\"h5\" sx={{ fontWeight: \"bold\" }}>\r\n        Filter\r\n      </Typography>\r\n\r\n      <Typography\r\n        component=\"div\"\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography component=\"div\" sx={{ display: \"flex\", gap: \"20px\" }}>\r\n          <Input handleInput={handleInput} />\r\n          <DropDown\r\n            size=\"medium\"\r\n            options={regionOptions}\r\n            label={EDropType.regions}\r\n            handleDropDowns={handleDropDowns}\r\n          />\r\n        </Typography>\r\n\r\n        <DropDown\r\n          size=\"small\"\r\n          options={sortOptions}\r\n          label={EDropType.sortBy}\r\n          handleDropDowns={handleDropDowns}\r\n        />\r\n      </Typography>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { FC } from \"react\";\r\nimport {\r\n  Paper,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  Table as TableM,\r\n} from \"@mui/material\";\r\nimport { CloseOutlined } from \"@mui/icons-material\";\r\nimport { IData } from \"../../types\";\r\n\r\ninterface Props {\r\n  countries: IData[] | [];\r\n  handleDeleteCountry: (name: string) => void;\r\n}\r\n\r\nconst Table: FC<Props> = ({ countries, handleDeleteCountry }) => {\r\n  const headers: string[] = [\r\n    \"country\",\r\n    \"region\",\r\n    \"population(2023)\",\r\n    \"area\",\r\n    \"flag\",\r\n    \"icon\",\r\n  ];\r\n\r\n  return (\r\n    <Typography component=\"div\">\r\n      <TableContainer component={Paper}>\r\n        <TableM sx={{ minWidth: 650 }}>\r\n          <TableHead sx={{ background: \"lightgrey\" }}>\r\n            <TableRow>\r\n              {headers?.map((item) => {\r\n                return (\r\n                  <TableCell key={item}>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      sx={{ visibility: item === \"icon\" ? \"hidden\" : \"\" }}\r\n                    >\r\n                      {item?.toUpperCase()}\r\n                    </Typography>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {countries?.map((row: IData) => (\r\n              <TableRow\r\n                key={row?.country}\r\n                // sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Typography component=\"span\" sx={{ fontWeight: 600 }}>\r\n                    {row?.country}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell>{row?.region}</TableCell>\r\n                <TableCell>{row?.population}</TableCell>\r\n                <TableCell>{row?.area}</TableCell>\r\n                <TableCell>\r\n                  <Typography\r\n                    width=\"40px\"\r\n                    component=\"img\"\r\n                    src={row?.flag?.svg}\r\n                    alt={row?.flag?.alt}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"right\"\r\n                  sx={{ width: \"73px\", border: \"1px solid lightgrey\" }}\r\n                >\r\n                  <IconButton\r\n                    sx={{ background: \"lightgrey\" }}\r\n                    onClick={() => handleDeleteCountry(row?.country)}\r\n                  >\r\n                    <CloseOutlined />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TableM>\r\n      </TableContainer>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import axios, {\r\n  AxiosError,\r\n  AxiosResponse,\r\n  InternalAxiosRequestConfig,\r\n} from \"axios\";\r\nimport { store } from \"../store/store\";\r\nimport { setLoading } from \"../store/features/main/mainSlice\";\r\n\r\nexport const base =\r\n  // TODO: should be in env file\r\n  process.env.REACT_APP_API_BASE_URL || \"https://restcountries.com/v3.1/\";\r\n\r\nexport const publicApi = axios.create({ baseURL: base });\r\n\r\nexport const errorHandler = (error: AxiosError | Error) => {\r\n  store.dispatch(setLoading(false));\r\n\r\n  // TODO: handle error\r\n  console.log(error.message);\r\n};\r\n\r\npublicApi.interceptors.request.use((request: InternalAxiosRequestConfig) => {\r\n  store.dispatch(setLoading(true));\r\n  return request;\r\n}, errorHandler);\r\n\r\npublicApi.interceptors.response.use((response: AxiosResponse) => {\r\n  store.dispatch(setLoading(false));\r\n  return response;\r\n}, errorHandler);\r\n","import { publicApi } from \"./config\";\r\n\r\nexport const getAllCountries = async () => {\r\n  // NOTE: api does not provide 'limit' property\r\n  const response = await publicApi.get(\"all\");\r\n  return response?.data;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getAllCountries } from \"../../api/country\";\r\nimport { EDropType, IData } from \"../../types\";\r\nimport { formatData } from \"../../utils\";\r\n\r\nconst useMain = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sortingField, setSortingField] = useState<string>(\"\");\r\n  const [countries, setCountries] = useState<IData[] | []>([]);\r\n  const [countriesCopy, setCountriesCopy] = useState<IData[] | []>([]);\r\n\r\n  const handleDeleteCountry = (name: string) => {\r\n    const newCountries = countries.filter((item) => item?.country !== name);\r\n    setCountries(newCountries);\r\n  };\r\n\r\n  const handleDropDowns = (value: string | null, type: EDropType) => {\r\n    if (!value && type === EDropType.regions) {\r\n      // NOTE: can be used as reset\r\n      // setCountries(countriesCopy);\r\n      return;\r\n    }\r\n\r\n    if (type === EDropType.regions) {\r\n      const newCountries = countriesCopy.filter(\r\n        (item) => item?.region === value\r\n      );\r\n      setCountries(newCountries);\r\n    }\r\n\r\n    if (type === EDropType.sortBy) {\r\n      const field = value?.toLowerCase() || \"\";\r\n      setSortingField(field);\r\n    }\r\n  };\r\n\r\n  // TODO: handle with a delay (debounce function)\r\n  const handleInput = (name: string) => {\r\n    setSearch(name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await getAllCountries();\r\n      const formattedData = formatData(response?.slice(0, 40));\r\n      setCountries((prevData) => formattedData);\r\n      setCountriesCopy((prevData) => formattedData);\r\n    })();\r\n  }, []);\r\n\r\n  const finalData = [...countries]\r\n    .sort(\r\n      (a: IData, b: IData) =>\r\n        +a[sortingField as keyof IData] - +b[sortingField as keyof IData]\r\n    )\r\n    .filter((item) =>\r\n      item?.country?.toLowerCase()?.includes(search?.toLowerCase())\r\n    );\r\n\r\n  return {\r\n    finalData,\r\n    sortingField,\r\n    handleInput,\r\n    handleDropDowns,\r\n    handleDeleteCountry,\r\n  };\r\n};\r\n\r\nexport default useMain;\r\n","// TODO: fixe typification\r\nexport function formatData<T>(res: T[]) {\r\n  if (!res?.length) return [];\r\n\r\n  const data = res?.map((item: any) => {\r\n    return {\r\n      country: item?.name?.common,\r\n      region: item?.region,\r\n      population: item?.population,\r\n      area: item?.area,\r\n      flag: item?.flags,\r\n    };\r\n  });\r\n\r\n  return data;\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport Filters from \"./../../components/filters\";\r\nimport Table from \"../../components/table\";\r\nimport useMain from \"./useMain\";\r\n\r\nconst Main = () => {\r\n  const { finalData, handleDeleteCountry, handleDropDowns, handleInput } =\r\n    useMain();\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      sx={{\r\n        gap: \"30px\",\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        margin: \"0 auto\",\r\n        padding: \"20px 0\",\r\n        minWidth: \"1200px\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <Filters handleDropDowns={handleDropDowns} handleInput={handleInput} />\r\n      <Table countries={finalData} handleDeleteCountry={handleDeleteCountry} />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"names":["_ref","size","options","label","handleDropDowns","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","inputValue","setInputValue","_jsx","Typography","component","children","Autocomplete","onChange","e","newValue","onInputChange","_","newInputValue","sx","width","renderInput","params","TextField","_objectSpread","EDropType","handleInput","search","setSearch","placeholder","_e$target","target","_jsxs","variant","fontWeight","display","alignItems","justifyContent","gap","Input","DropDown","regions","sortBy","countries","handleDeleteCountry","headers","TableContainer","Paper","TableM","minWidth","TableHead","background","TableRow","map","item","TableCell","visibility","toUpperCase","TableBody","row","_row$flag","_row$flag2","scope","country","region","population","area","src","flag","svg","alt","align","border","IconButton","onClick","CloseOutlined","base","process","REACT_APP_API_BASE_URL","publicApi","axios","baseURL","errorHandler","error","store","setLoading","console","log","message","interceptors","request","use","response","getAllCountries","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","sent","abrupt","data","stop","apply","arguments","sortingField","setSortingField","_useState5","_useState6","setCountries","_useState7","_useState8","countriesCopy","setCountriesCopy","useEffect","formattedData","res","slice","length","_item$name","name","common","flags","prevData","finalData","_toConsumableArray","sort","a","b","filter","_item$country","_item$country$toLower","toLowerCase","includes","type","newCountries","field","_useMain","useMain","margin","padding","flexDirection","Filters","Table"],"sourceRoot":""}